name: adf build-release pipeline

trigger:
- release
- main

parameters:
- name: "isProd"
  type: boolean
  default: false
- name: "adfRootFolder"
  type: string
  default: '/'

variables:
- name: "devADFName"
  value: ''
- name: "devPoolName"
  value: ''
- name: "devSubscriptionId"
  value: ''
- name: "devResourceGroup"
  value: ''
- ${{ if and(eq(variables['Build.SourceBranchName'], 'release'), eq(parameters.isProd, true)) }}: # PROD
  - group: ""
- ${{ elseif and(eq(variables['Build.SourceBranchName'], 'release'), eq(parameters.isProd, false)) }}: # TEST
  - group: "bthsgte-hri-devops-vars"
- ${{ else }}: # DEV
  - group: "bthsgdv-hri-devops-vars"

stages:
  - stage: Build
    displayName: Validate and generate ARM templates # generate ARM template from DEV
    jobs:
      - template: ./nested/build.yml
        parameters:
          adfName:  ${{ variables.devADFName }}
          poolName:  ${{ variables.devPoolName }}
          subscriptionId:  ${{ variables.devSubscriptionId }}
          resourceGroup:  ${{ variables.devResourceGroup }}
          adfRootFolder:  ${{ parameters.adfRootFolder }}

  - stage: DeployDEV
    dependsOn: build
    condition: and(succeeded(), eq(variables['environment'], 'dev')) 
    displayName: 'Deploy ADF-DEV'
    variables:
      - template: ./vars/dev.yml 
    jobs:
      - template: ./nested/release.yml
        parameters: # mixed between template params and viable groups 
          adfName: $(adf_name)
          poolName: $(pool_name)
          deployEnvironment: 'dev'
          subscriptionId: $(subscription_id)
          serviceConnection: $(service_connection)
          resourceGroup: $(resources_resource_group)
          overrideParameters: ${{ variables.overrideParameters }}
      
  - stage: DeployTEST
    dependsOn: build
    condition: and(succeeded(), eq(variables['environment'], 'test')) 
    displayName: 'Deploy ADF-TEST'
    variables:
      - template: ./vars/test.yml 
    jobs:
      - template: ./nested/release.yml
        parameters:
          adfName: $(adf_name)
          poolName: $(pool_name)
          deployEnvironment: 'test'
          subscriptionId: $(subscription_id)
          serviceConnection: $(service_connection)
          resourceGroup: $(resources_resource_group)
          overrideParameters: ${{ variables.overrideParameters }}

    - stage: DeployTEST
      dependsOn: build
      condition: and(succeeded(), eq(variables['environment'], 'prod')) 
      displayName: 'Deploy ADF-PROD'
      variables:
        - template: ./vars/test.yml 
      jobs:
        - template: ./nested/release.yml
          parameters:
            adfName: $(adf_name)
            poolName: $(pool_name)
            deployEnvironment: 'test'
            subscriptionId: $(subscription_id)
            serviceConnection: $(service_connection)
            resourceGroup: $(resources_resource_group)
            overrideParameters: ${{ variables.overrideParameters }}